{"version":3,"sources":["scripts/views/updatedizhi/index.js"],"names":["CustomChildren","props","onClick","style","backgroundColor","paddingLeft","className","display","height","lineHeight","position","borderBottom","flex","overflow","textOverflow","whiteSpace","children","textAlign","color","marginRight","extra","antdDistrict","districtData","require","Address","connect","state","userList","getIn","handleClick","pickerValue","a1","a3","filter","value","console","log","bingAddress1","push","label","val","map","ixx","i","bingAddress","toString","updateList","bigaddress","name","autoFocusInst","tel","inputRef","xiangXiAddress","xiangxi","mobile","sessionStorage","address","axios","post","then","res","data","type","history","this","JSON","parse","Object","keys","forEach","index","itemLevel1","itemLevel2","code","cities","data2","districts","itemLevel3","title","show","search","defaultValue","clear","placeholder","ref","el","onChange","v","setState","onOk","Item","width","Component"],"mappings":"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","file":"static/js/26.6c9f7fe5.chunk.js","sourcesContent":["import \"./index.scss\"\r\nimport React, { Component } from \"react\";\r\nimport Head from \"~/components/head\"\r\nimport { connect } from \"react-redux\"\r\nimport { getAddress } from \"../../actions\";\r\nimport { axios } from \"&\"\r\nimport { List, InputItem, WhiteSpace, Picker } from 'antd-mobile';\r\nconst CustomChildren = props => (\r\n    <div\r\n        onClick={props.onClick}\r\n        style={{ backgroundColor: '#fff', paddingLeft: 15 }}\r\n    >\r\n        <div className=\"test\" style={{ display: 'flex', height: '45px', lineHeight: '45px', position: 'relative', borderBottom: 0 }}>\r\n            <div style={{ flex: 0.28, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{props.children}</div>\r\n            <div style={{ flex: 0.8, textAlign: 'left', color: '#999', marginRight: 15 }}>{props.extra}</div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nlet antdDistrict = [];\r\n\r\nlet districtData = require('&/area.json');\r\n\r\n@connect(\r\n    state => {\r\n        return {\r\n            userList: state.getIn(['address', 'userList'])\r\n        }\r\n    }\r\n)\r\nclass Address extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pickerValue: [],\r\n            bingAddress1: [],\r\n            updateList: {}\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.state.updateList = JSON.parse(sessionStorage.updateList)[0]\r\n        console.log(this.state.updateList.name)\r\n\r\n    }\r\n    handleClick = () => {\r\n        const {\r\n            userList\r\n        } = this.props\r\n        if (this.state.pickerValue != '') {\r\n            var a1;\r\n            var a2;\r\n            var a3\r\n            a1 = antdDistrict.filter(value => {\r\n                return value.value == this.state.pickerValue[0]\r\n            })\r\n\r\n            console.log(a1)\r\n            this.state.bingAddress1.push(a1[0].label)\r\n\r\n            a2 = a1[0].children.filter(val => {\r\n                console.log(val)\r\n                return val.value == this.state.pickerValue[1]\r\n            })\r\n            a2.map((ixx, i) => {\r\n                this.state.bingAddress1.push(ixx.label)\r\n\r\n                a3 = ixx.children.filter(val => {\r\n                    console.log(val)\r\n                    return val.value == this.state.pickerValue[2]\r\n                })\r\n            })\r\n            a3.map((value, i) => {\r\n                this.state.bingAddress1.push(value.label)\r\n            })\r\n            var bingAddress = this.state.bingAddress1.toString()\r\n            console.log(bingAddress)\r\n\r\n        }\r\n\r\n        this.state.updateList.bigaddress = bingAddress\r\n        this.state.updateList.name = this.autoFocusInst.state.value\r\n        this.state.updateList.tel = this.inputRef.state.value\r\n        this.state.updateList.xiangXiAddress = this.xiangxi.state.value\r\n        this.state.updateList.mobile = sessionStorage.mobile\r\n        this.state.updateList.address = bingAddress + ' ' + this.xiangxi.state.value\r\n        console.log(this.state.updateList)\r\n\r\n        axios.post('/react/updateAddress', this.state.updateList).then(res => {\r\n            if (!!res.data.type) {\r\n                sessionStorage.updateList = ''\r\n                this.props.history.push('/dizhi')\r\n\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {\r\n            userList\r\n        } = this.props\r\n\r\n        Object.keys(districtData).forEach((index) => {\r\n            let itemLevel1 = {};\r\n            let itemLevel2 = {};\r\n            itemLevel1.value = districtData[index].code;\r\n            itemLevel1.label = districtData[index].name;\r\n            itemLevel1.children = [];\r\n            let data = districtData[index].cities;\r\n            Object.keys(data).forEach((index) => {\r\n                itemLevel2.value = data[index].code;\r\n                itemLevel2.label = data[index].name;\r\n                itemLevel2.children = [];\r\n                let data2 = data[index].districts;\r\n                let itemLevel3 = {};\r\n                itemLevel3.children = [];\r\n                Object.keys(data2).forEach((index) => {\r\n                    itemLevel3.value = index;\r\n                    itemLevel3.label = data2[index];\r\n                    itemLevel2.children.push(itemLevel3);\r\n                    itemLevel3 = {};\r\n                });\r\n                itemLevel1.children.push(itemLevel2);\r\n                itemLevel2 = {};\r\n            });\r\n            antdDistrict.push(itemLevel1)\r\n\r\n\r\n        });\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Head title=\"修改地址\" show={true} search={true}></Head>\r\n                <List >\r\n                    <InputItem\r\n                        defaultValue={this.state.updateList.name}\r\n                        clear\r\n                        placeholder=\"2到6位中文\"\r\n                        ref={el => this.autoFocusInst = el}\r\n                    >收货人</InputItem>\r\n                    <InputItem\r\n                        defaultValue={this.state.updateList.tel}\r\n                        clear\r\n                        placeholder=\"请输入正确的手机号格式\"\r\n                        ref={el => this.inputRef = el}\r\n                    >手机号</InputItem>\r\n                    <Picker\r\n\r\n                        title=\"选择地区\"\r\n                        extra=\"请选择(可选)\"\r\n                        data={antdDistrict}\r\n                        value={this.state.pickerValue}\r\n                        onChange={v => this.setState({ pickerValue: v })}\r\n                        onOk={v => this.setState({ pickerValue: v })}\r\n                        onClick={() => { console.log('xx') }}\r\n                    >\r\n\r\n                        <CustomChildren className=\"a-childOne\">省市区</CustomChildren>\r\n\r\n                    </Picker>\r\n                    <InputItem\r\n                        defaultValue={this.state.updateList.xiangXiAddress}\r\n                        clear\r\n                        placeholder=\"请输入详细地址\"\r\n                        ref={el => this.xiangxi = el}\r\n                    >详细地址\r\n                    </InputItem>\r\n                    <List.Item>\r\n                        <div\r\n                            style={{ width: '100%', color: '#1b522d', textAlign: 'center' }}\r\n                            onClick={this.handleClick}\r\n                        >\r\n                            确认修改\r\n                        </div>\r\n                    </List.Item>\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Address;"],"sourceRoot":""}